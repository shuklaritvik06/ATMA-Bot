const Airtable = require("airtable");
const base = new Airtable({ apiKey: `${process.env.API_KEY}` }).base(
  `${process.env.BASE_ID}`
);

async function options(ctx) {
  return ctx.telegram.sendMessage(ctx.chat.id, "–° —á–µ–º —è –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å?", {
    reply_markup: {
      keyboard: [
        [
          {
            text: "–î–æ–±–∞–≤–∏—Ç—å —É—Å–ª—É–≥—É",
          },
        ],
        [
          {
            text: "–ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É",
          },
        ],
        [
          {
            text: "–ü–æ–¥–Ω—è—Ç—å –±–∏–ª–µ—Ç",
          },
        ],
        [
          {
            text: "–î–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å",
          },
        ],
        [
          {
            text: "/help",
          },
        ],
      ],
      resize_keyboard: true,
      one_time_keyboard: true,
    },
  });
}

module.exports.welcome = async (ctx) => {
  await ctx.telegram.sendPhoto(
    ctx.chat.id,
    "https://www.ebi.com.tr/medya/2017/12/chat-bot-for-social-networking.jpg",
    {
      caption: `
      –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! üëã –ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –≤–∞—Å –∑–∞ –∏–Ω—Ç–µ—Ä–µ—Å –∫ ATMA Services. –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º —Å –≤–∞—à–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏.
    `,
    }
  );
  await options(ctx);
};

module.exports.addOwner = async (ctx) => {
  ctx.telegram.sendMessage(
    ctx.chat.id,
    `
    –ü–æ—Ç—Ä—è—Å–∞—é—â–∏–π! üí´ –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é —É—Å–ª—É–≥—É, –∑–∞–ø–æ–ª–Ω–∏–≤ —ç—Ç—É —Ñ–æ—Ä–º—É https://airtable.com/shr12nuZycf5fWt4k
    `
  );
};

module.exports.bookService = async (ctx) => {
  ctx.telegram.sendMessage(ctx.chat.id, `–ö–∞–∫—É—é —É—Å–ª—É–≥—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å?`);
  ctx.telegram.sendMessage(
    ctx.chat.id,
    `
  –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∂–µ–ª–∞–µ–º—É—é —É—Å–ª—É–≥—É, –≤—ã–ø–æ–ª–Ω–∏–≤ –ø–æ–∏—Å–∫ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n
  @atma_services_bot <–∏–º—è_—Å–ª—É–∂–±—ã>
  `
  );
};

module.exports.giveFeedback = async (ctx) => {
  ctx.telegram.sendMessage(
    ctx.chat.id,
    `
    –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å–≤–æ–π —à–∞–≥ –∫ —É–ª—É—á—à–µ–Ω–∏—é —Å–µ—Ä–≤–∏—Å–æ–≤ ATMA –∑–¥–µ—Å—å https://airtable.com/shrC7nSKkeNaA8kBT üí´
    `
  );
};

module.exports.raiseTicket = async (ctx) => {
  ctx.telegram.sendMessage(
    ctx.chat.id,
    `
    –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞ üòû –í—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –∂–∞–ª–æ–±—É –∑–¥–µ—Å—å https://airtable.com/shrSQufO7q3QwuSsD
    `
  );
};

module.exports.payNow = async (ctx) => {
  ctx.telegram.sendMessage(
    ctx.chat.id,
    ` –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–ª–∞—Ç–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –Ω–æ–º–µ—Ä —Å—á–µ—Ç–∞: 1234567890 –∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —ç—Ç–æ–º WhatsApp 123456789 üì±`
  );
};

module.exports.search = async (ctx) => {
  let query = ctx.inlineQuery.query;
  if (query.length > 0 && query !== " ") {
    let results = [];
    try {
      base("Services")
        .select({
          view: "Grid view",
          maxRecords: 3,
          filterByFormula: `AND(FIND(LOWER('${query}'), LOWER({Service})),NOT({Booked} = 'Booked'))`,
        })
        .eachPage((record) => {
          record.forEach((item) => {
            results.push({
              type: "article",
              id: item.id,
              title: item.get("Service"),
              description: `${item.get("Owner First Name")} ${item.get(
                "Price"
              )} ${item.get("Owner Dormitory")} ${item.get("Owner Room")}`,
              thumb_url: item.get("Device Image")[0].url,
              input_message_content: {
                message_text: `
                –ò–º—è: ${item.get("Owner First Name")} ${item.get(
                  "Owner Last Name"
                )}\n–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ: ${item.get("Service")}\n–¶–µ–Ω–∞: ${item.get(
                  "Price"
                )}\n–û–±—â–µ–∂–∏—Ç–∏–µ: ${item.get(
                  "Owner Dormitory"
                )}\n–ù–æ–º–µ—Ä –∫–æ–º–Ω–∞—Ç—ã: ${item.get("Owner Room")}\n
              `,
              },
              reply_markup: {
                inline_keyboard: [
                  [
                    {
                      text: "Book",
                      callback_data: `Book ${item.id}`,
                    },
                  ],
                ],
              },
            });
          });
          if (results.length > 0) {
            ctx.answerInlineQuery(results);
          } else {
            ctx.answerInlineQuery([
              {
                type: "article",
                id: "1",
                title: "No results found",
                description: "Please try again",
                input_message_content: {
                  message_text: "No results found",
                },
              },
            ]);
          }
        });
    } catch (err) {
      console.log(err);
    }
  }
};

module.exports.helpFunc = async (ctx) => {
  await ctx.reply(
    "–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º üòä –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
  );
  await ctx.reply("/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n/help - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å");
};
